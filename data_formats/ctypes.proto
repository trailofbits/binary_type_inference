syntax = "proto3";

package ctypes;

message Tid {
  string name = 1;
  string address = 2;
}

message TypeId {
  uint32 type_id = 1;
}

message TidToTypeId {
  Tid tid = 1;
  TypeId type_id = 2;
}

message CTypeMapping {
  map<uint32, CType> type_id_to_ctype = 1;
  repeated TidToTypeId type_variable_repr_nodes = 2;
}

message Parameter {
  uint32 parameter_index = 1;
  TypeId type_index = 2;
}

message Function {
  repeated Parameter parameters = 1;
  optional TypeId return_type = 2;
  bool has_return = 3;
}

message Field {
  uint32 bit_size = 1;
  uint32 byte_offset = 2;
  TypeId type_id = 3;
}

message Structure { repeated Field fields = 1; }

message Alias { TypeId to_type = 1; }

message Primitive { string type_constant = 1; }

message Pointer { TypeId to_type_id = 1; }

message Union { repeated TypeId target_type_ids = 1; }

message CType {
  TypeId type_id = 7;
  oneof inner_type {
    Function function = 1;
    Structure structure = 2;
    Alias alias = 3;
    Primitive primitive = 4;
    Pointer pointer = 5;
    Union union = 6;
  }
}
